cmake_minimum_required(VERSION 3.8)
project(sutoku)

if(MSVC)
	add_compile_definitions(_USE_DLL)
	set(CMAKE_CXX_FLAGS "/utf-8")
	link_libraries(sobjd.lib sbioinfod.lib sappd.lib)
elseif(UNIX)
	if (DEFINED ENV{SLIB_INCLUDE})
		message(STATUS "SLIB_INCLUDE=$ENV{SLIB_INCLUDE}")
	else()
		#message(STATUS "SLIB_INCLUDE not defined.")
		set(ENV{SLIB_INCLUDE} ${CMAKE_INSTALL_PREFIX}/include/slib)
		message(STATUS "SLIB_INCLUDE=$ENV{SLIB_INCLUDE}")
	endif()
	if (DEFINED ENV{SLIB_DIR})
	    message(STATUS "SLIB_DIR=$ENV{SLIB_DIR}")
	else()
		#message(STATUS "SLIB_DIR not defined.")
		set(ENV{SLIB_DIR} ${CMAKE_INSTALL_PREFIX}/lib)
	    message(STATUS "SLIB_DIR=$ENV{SLIB_DIR}")
	endif()
	set(CMAKE_CXX_FLAGS "-std=c++11 -O2")
	link_libraries(pthread sobj sbioinfo sapp)
endif()
include_directories(${PROJECT_SOURCE_DIR} $ENV{SLIB_INCLUDE})
link_directories($ENV{SLIB_DIR})
#message(STATUS "Install prefix=${CMAKE_INSTALL_PREFIX}")
execute_process(
	COMMAND python MakeProf.py profile.h.prv appinfo.json profile.h
	WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
)
set(CODES main.cpp analyzer.cpp param.cpp util.cpp bamreader.cpp sranalysis.cpp cnanalysis.cpp varindex.cpp varcheck.cpp varsearch.cpp)
add_executable(sutoku ${CODES})
